

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Wed Aug 15 01:54:59 2018

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F2320
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 1.44
    16                           ; Generated 14/09/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2320 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     
    50                           	psect	smallconst
    51  000200                     __psmallconst:
    52                           	opt stack 0
    53  000200  00                 	db	0
    54  000201                     _gluh_wait:
    55                           	opt stack 0
    56  000201  0064               	dw	100
    57  000203  0000               	dw	0
    58  000205                     __end_of_gluh_wait:
    59                           	opt stack 0
    60  0000                     _PORTBbits	set	3969
    61  0000                     _PORTAbits	set	3968
    62  0000                     _TRISB	set	3987
    63  0000                     _PORTB	set	3969
    64  0000                     _TRISA	set	3986
    65  0000                     _PORTA	set	3968
    66  0000                     _TRISC	set	3988
    67  0000                     _PORTC	set	3970
    68  0000                     _T1CON	set	4045
    69  0000                     _CMCON	set	4020
    70  0000                     _ADCON1	set	4033
    71  0000                     _ADCON0	set	4034
    72  0000                     _OSCCONbits	set	4051
    73  0000                     _LATC7	set	31839
    74  0000                     _LATC0	set	31832
    75  0000                     _LATC5	set	31837
    76  0000                     _LATA1	set	31817
    77  0000                     _LATC4	set	31836
    78  0000                     _LATA2	set	31818
    79  0000                     _LATC3	set	31835
    80  0000                     _LATC6	set	31838
    81  0000                     _LATB5	set	31829
    82  0000                     _LATC2	set	31834
    83  0000                     _LATA5	set	31821
    84  0000                     _LATC1	set	31833
    85                           
    86                           ; #config settings
    87  000205  00                 	db	0	; dummy byte at the end
    88  0000                     
    89                           	psect	cinit
    90  0004FE                     __pcinit:
    91                           	opt stack 0
    92  0004FE                     start_initialization:
    93                           	opt stack 0
    94  0004FE                     __initialization:
    95                           	opt stack 0
    96                           
    97                           ; Clear objects allocated to COMRAM (3 bytes)
    98  0004FE  6A23               	clrf	(__pbssCOMRAM+2)& (0+255),c
    99  000500  6A22               	clrf	(__pbssCOMRAM+1)& (0+255),c
   100  000502  6A21               	clrf	__pbssCOMRAM& (0+255),c
   101  000504                     end_of_initialization:
   102                           	opt stack 0
   103  000504                     __end_of__initialization:
   104                           	opt stack 0
   105  000504  0E00               	movlw	low (__Lsmallconst shr (0+16))
   106  000506  6EF8               	movwf	tblptru,c
   107  000508  0E02               	movlw	high __Lsmallconst
   108  00050A  6EF7               	movwf	tblptrh,c
   109  00050C  0100               	movlb	0
   110  00050E  EF03  F001         	goto	_main	;jump to C main() function
   111                           tblptru	equ	0xFF8
   112                           tblptrh	equ	0xFF7
   113                           
   114                           	psect	bssCOMRAM
   115  000021                     __pbssCOMRAM:
   116                           	opt stack 0
   117  000021                     main@F2606:
   118                           	opt stack 0
   119  000021                     	ds	3
   120                           tblptru	equ	0xFF8
   121                           tblptrh	equ	0xFF7
   122                           
   123                           	psect	cstackCOMRAM
   124  000001                     __pcstackCOMRAM:
   125                           	opt stack 0
   126  000001                     now_change@state:
   127                           	opt stack 0
   128                           
   129                           ; 2 bytes @ 0x0
   130  000001                     	ds	2
   131  000003                     now_change@ef1:
   132                           	opt stack 0
   133                           
   134                           ; 1 bytes @ 0x2
   135  000003                     	ds	1
   136  000004                     now_change@ef2:
   137                           	opt stack 0
   138                           
   139                           ; 1 bytes @ 0x3
   140  000004                     	ds	1
   141  000005                     ??_now_change:
   142                           
   143                           ; 1 bytes @ 0x4
   144  000005                     	ds	2
   145  000007                     all_on@state:
   146                           	opt stack 0
   147                           
   148                           ; 2 bytes @ 0x6
   149  000007                     	ds	2
   150  000009                     all_on@gluh:
   151                           	opt stack 0
   152                           
   153                           ; 1 bytes @ 0x8
   154  000009                     	ds	1
   155  00000A                     all_on@ef1:
   156                           	opt stack 0
   157                           
   158                           ; 1 bytes @ 0x9
   159  00000A                     	ds	1
   160  00000B                     all_on@ef2:
   161                           	opt stack 0
   162                           
   163                           ; 1 bytes @ 0xA
   164  00000B                     	ds	1
   165  00000C                     ??_all_on:
   166                           
   167                           ; 1 bytes @ 0xB
   168  00000C                     	ds	1
   169  00000D                     
   170                           ; 2 bytes @ 0xC
   171  00000D                     	ds	2
   172  00000F                     
   173                           ; 3 bytes @ 0xE
   174  00000F                     	ds	3
   175  000012                     ??_main:
   176                           
   177                           ; 1 bytes @ 0x11
   178  000012                     	ds	1
   179  000013                     main@pred_pred_state:
   180                           	opt stack 0
   181                           
   182                           ; 1 bytes @ 0x12
   183  000013                     	ds	1
   184  000014                     main@press_switch:
   185                           	opt stack 0
   186                           
   187                           ; 1 bytes @ 0x13
   188  000014                     	ds	1
   189  000015                     main@SERIES:
   190                           	opt stack 0
   191                           
   192                           ; 1 bytes @ 0x14
   193  000015                     	ds	1
   194  000016                     main@LOOP:
   195                           	opt stack 0
   196                           
   197                           ; 1 bytes @ 0x15
   198  000016                     	ds	1
   199  000017                     main@change_e1_state:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x16
   203  000017                     	ds	1
   204  000018                     main@change_e2_state:
   205                           	opt stack 0
   206                           
   207                           ; 1 bytes @ 0x17
   208  000018                     	ds	1
   209  000019                     main@pred_state:
   210                           	opt stack 0
   211                           
   212                           ; 1 bytes @ 0x18
   213  000019                     	ds	1
   214  00001A                     main@changestate:
   215                           	opt stack 0
   216                           
   217                           ; 1 bytes @ 0x19
   218  00001A                     	ds	1
   219  00001B                     main@e1_state:
   220                           	opt stack 0
   221                           
   222                           ; 1 bytes @ 0x1A
   223  00001B                     	ds	1
   224  00001C                     main@e2_state:
   225                           	opt stack 0
   226                           
   227                           ; 1 bytes @ 0x1B
   228  00001C                     	ds	1
   229  00001D                     main@state:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0x1C
   233  00001D                     	ds	1
   234  00001E                     main@press_switch_ar:
   235                           	opt stack 0
   236                           
   237                           ; 3 bytes @ 0x1D
   238  00001E                     	ds	3
   239                           tblptru	equ	0xFF8
   240                           tblptrh	equ	0xFF7
   241                           
   242 ;;
   243 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   244 ;;
   245 ;; *************** function _main *****************
   246 ;; Defined at:
   247 ;;		line 112 in file "bypass_main.c"
   248 ;; Parameters:    Size  Location     Type
   249 ;;  argc            2   12[COMRAM] int 
   250 ;;  argv            3   14[COMRAM] PTR PTR unsigned char 
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  press_switch    3   29[COMRAM] unsigned char [3]
   253 ;;  state           1   28[COMRAM] unsigned char 
   254 ;;  e2_state        1   27[COMRAM] unsigned char 
   255 ;;  e1_state        1   26[COMRAM] unsigned char 
   256 ;;  changestate     1   25[COMRAM] unsigned char 
   257 ;;  pred_state      1   24[COMRAM] unsigned char 
   258 ;;  change_e2_st    1   23[COMRAM] unsigned char 
   259 ;;  change_e1_st    1   22[COMRAM] unsigned char 
   260 ;;  LOOP            1   21[COMRAM] unsigned char 
   261 ;;  SERIES          1   20[COMRAM] unsigned char 
   262 ;;  press_switch    1   19[COMRAM] unsigned char 
   263 ;;  pred_pred_st    1   18[COMRAM] unsigned char 
   264 ;; Return value:  Size  Location     Type
   265 ;;                  2   12[COMRAM] int 
   266 ;; Registers used:
   267 ;;		wreg, status,2, status,0, cstack
   268 ;; Tracked objects:
   269 ;;		On entry : 0/0
   270 ;;		On exit  : 0/0
   271 ;;		Unchanged: 0/0
   272 ;; Data sizes:     COMRAM   BANK0   BANK1
   273 ;;      Params:         5       0       0
   274 ;;      Locals:        14       0       0
   275 ;;      Temps:          1       0       0
   276 ;;      Totals:        20       0       0
   277 ;;Total ram usage:       20 bytes
   278 ;; Hardware stack levels required when called:    2
   279 ;; This function calls:
   280 ;;		_all_on
   281 ;; This function is called by:
   282 ;;		Startup code after reset
   283 ;; This function uses a non-reentrant model
   284 ;;
   285                           
   286                           	psect	text0
   287  000206                     __ptext0:
   288                           	opt stack 0
   289  000206                     _main:
   290                           	opt stack 29
   291                           
   292                           ;bypass_main.c: 113: OSCCONbits.IRCF = 0b110;
   293                           
   294                           ;incstack = 0
   295  000206  50D3               	movf	4051,w,c	;volatile
   296  000208  0B8F               	andlw	-113
   297  00020A  0960               	iorlw	96
   298  00020C  6ED3               	movwf	4051,c	;volatile
   299                           
   300                           ;bypass_main.c: 114: ADCON0 = 0b00010000;
   301  00020E  0E10               	movlw	16
   302  000210  6EC2               	movwf	4034,c	;volatile
   303                           
   304                           ;bypass_main.c: 115: ADCON1 = 0b00001111;
   305  000212  0E0F               	movlw	15
   306  000214  6EC1               	movwf	4033,c	;volatile
   307                           
   308                           ;bypass_main.c: 116: CMCON = 0b00000111;
   309  000216  0E07               	movlw	7
   310  000218  6EB4               	movwf	4020,c	;volatile
   311                           
   312                           ;bypass_main.c: 117: T1CON = 0;
   313  00021A  0E00               	movlw	0
   314  00021C  6ECD               	movwf	4045,c	;volatile
   315                           
   316                           ;bypass_main.c: 119: PORTC = 0b00000000;
   317  00021E  0E00               	movlw	0
   318  000220  6E82               	movwf	3970,c	;volatile
   319                           
   320                           ;bypass_main.c: 120: TRISC = 0b00000000;
   321  000222  0E00               	movlw	0
   322  000224  6E94               	movwf	3988,c	;volatile
   323                           
   324                           ;bypass_main.c: 122: PORTA = 0b00000000;
   325  000226  0E00               	movlw	0
   326  000228  6E80               	movwf	3968,c	;volatile
   327                           
   328                           ;bypass_main.c: 123: TRISA = 0b00001001;
   329  00022A  0E09               	movlw	9
   330  00022C  6E92               	movwf	3986,c	;volatile
   331                           
   332                           ;bypass_main.c: 125: PORTB = 0b00000000;
   333  00022E  0E00               	movlw	0
   334  000230  6E81               	movwf	3969,c	;volatile
   335                           
   336                           ;bypass_main.c: 126: TRISB = 0b00010000;
   337  000232  0E10               	movlw	16
   338  000234  6E93               	movwf	3987,c	;volatile
   339                           
   340                           ;bypass_main.c: 128: uint8_t state = 0;
   341  000236  0E00               	movlw	0
   342  000238  6E1D               	movwf	main@state,c
   343                           
   344                           ;bypass_main.c: 129: uint8_t pred_state = 0;
   345  00023A  0E00               	movlw	0
   346  00023C  6E19               	movwf	main@pred_state,c
   347                           
   348                           ;bypass_main.c: 130: uint8_t pred_pred_state = 0;
   349  00023E  0E00               	movlw	0
   350  000240  6E13               	movwf	main@pred_pred_state,c
   351                           
   352                           ;bypass_main.c: 131: uint8_t changestate = 0;
   353  000242  0E00               	movlw	0
   354  000244  6E1A               	movwf	main@changestate,c
   355                           
   356                           ;bypass_main.c: 132: uint8_t press_switch = 0;
   357  000246  0E00               	movlw	0
   358  000248  6E14               	movwf	main@press_switch,c
   359                           
   360                           ;bypass_main.c: 134: uint8_t press_switch_ar[3] = {0, 0, 0};
   361  00024A  C021  F01E         	movff	main@F2606,main@press_switch_ar
   362  00024E  C022  F01F         	movff	main@F2606+1,main@press_switch_ar+1
   363  000252  C023  F020         	movff	main@F2606+2,main@press_switch_ar+2
   364                           
   365                           ;bypass_main.c: 135: all_on(10, 1, 1, 1);
   366  000256  0E00               	movlw	0
   367  000258  6E08               	movwf	all_on@state+1,c
   368  00025A  0E0A               	movlw	10
   369  00025C  6E07               	movwf	all_on@state,c
   370  00025E  0E01               	movlw	1
   371  000260  6E09               	movwf	all_on@gluh,c
   372  000262  0E01               	movlw	1
   373  000264  6E0A               	movwf	all_on@ef1,c
   374  000266  0E01               	movlw	1
   375  000268  6E0B               	movwf	all_on@ef2,c
   376  00026A  EC5C  F002         	call	_all_on	;wreg free
   377                           
   378                           ;bypass_main.c: 136: uint8_t SERIES = 1;
   379  00026E  0E01               	movlw	1
   380  000270  6E15               	movwf	main@SERIES,c
   381                           
   382                           ;bypass_main.c: 137: uint8_t LOOP = 0;
   383  000272  0E00               	movlw	0
   384  000274  6E16               	movwf	main@LOOP,c
   385                           
   386                           ;bypass_main.c: 139: uint8_t e1_state = 1;
   387  000276  0E01               	movlw	1
   388  000278  6E1B               	movwf	main@e1_state,c
   389                           
   390                           ;bypass_main.c: 140: uint8_t change_e1_state = 0;
   391  00027A  0E00               	movlw	0
   392  00027C  6E17               	movwf	main@change_e1_state,c
   393                           
   394                           ;bypass_main.c: 142: uint8_t e2_state = 1;
   395  00027E  0E01               	movlw	1
   396  000280  6E1C               	movwf	main@e2_state,c
   397                           
   398                           ;bypass_main.c: 143: uint8_t change_e2_state = 0;
   399  000282  0E00               	movlw	0
   400  000284  6E18               	movwf	main@change_e2_state,c
   401  000286                     
   402                           ;bypass_main.c: 147: if (PORTAbits.RA3 == 0) {
   403  000286  B680               	btfsc	3968,3,c	;volatile
   404  000288  D010               	goto	l82
   405                           
   406                           ;bypass_main.c: 148: _delay((unsigned long)((15)*(4000000/4000.0)));
   407  00028A  0E14               	movlw	20
   408  00028C  6E12               	movwf	??_main& (0+255),c
   409  00028E  0E7A               	movlw	122
   410  000290                     u797:
   411  000290  2EE8               	decfsz	wreg,f,c
   412  000292  D7FE               	bra	u797
   413  000294  2E12               	decfsz	??_main& (0+255),f,c
   414  000296  D7FC               	bra	u797
   415                           
   416                           ;bypass_main.c: 149: if (PORTAbits.RA3 == 0) {
   417  000298  B680               	btfsc	3968,3,c	;volatile
   418  00029A  D007               	goto	l82
   419                           
   420                           ;bypass_main.c: 150: press_switch_ar[0] = press_switch_ar[0] + 1;
   421  00029C  281E               	incf	main@press_switch_ar,w,c
   422  00029E  6E1E               	movwf	main@press_switch_ar,c
   423                           
   424                           ;bypass_main.c: 151: if (press_switch_ar[0] > 10) {
   425  0002A0  0E0A               	movlw	10
   426  0002A2  641E               	cpfsgt	main@press_switch_ar,c
   427  0002A4  D002               	goto	l82
   428                           
   429                           ;bypass_main.c: 152: press_switch_ar[0] = 10;
   430  0002A6  0E0A               	movlw	10
   431  0002A8  6E1E               	movwf	main@press_switch_ar,c
   432  0002AA                     l82:
   433                           
   434                           ;bypass_main.c: 153: }
   435                           ;bypass_main.c: 154: }
   436                           ;bypass_main.c: 155: }
   437                           ;bypass_main.c: 156: if (press_switch_ar[0] == 2) {
   438  0002AA  0E02               	movlw	2
   439  0002AC  181E               	xorwf	main@press_switch_ar,w,c
   440  0002AE  A4D8               	btfss	status,2,c
   441  0002B0  D00B               	goto	l83
   442                           
   443                           ;bypass_main.c: 157: changestate = 1;
   444  0002B2  0E01               	movlw	1
   445  0002B4  6E1A               	movwf	main@changestate,c
   446                           
   447                           ;bypass_main.c: 158: e1_state = !e1_state;
   448  0002B6  501B               	movf	main@e1_state,w,c
   449  0002B8  A4D8               	btfss	status,2,c
   450  0002BA  D002               	goto	u590
   451  0002BC  0E01               	movlw	1
   452  0002BE  D001               	goto	u600
   453  0002C0                     u590:
   454  0002C0  0E00               	movlw	0
   455  0002C2                     u600:
   456  0002C2  6E1B               	movwf	main@e1_state,c
   457                           
   458                           ;bypass_main.c: 159: press_switch_ar[0] = 3;
   459  0002C4  0E03               	movlw	3
   460  0002C6  6E1E               	movwf	main@press_switch_ar,c
   461  0002C8                     l83:
   462                           
   463                           ;bypass_main.c: 160: }
   464                           ;bypass_main.c: 161: if (PORTAbits.RA3 == 1) {
   465  0002C8  A680               	btfss	3968,3,c	;volatile
   466  0002CA  D00B               	goto	l85
   467                           
   468                           ;bypass_main.c: 162: _delay((unsigned long)((15)*(4000000/4000.0)));
   469  0002CC  0E14               	movlw	20
   470  0002CE  6E12               	movwf	??_main& (0+255),c
   471  0002D0  0E7A               	movlw	122
   472  0002D2                     u807:
   473  0002D2  2EE8               	decfsz	wreg,f,c
   474  0002D4  D7FE               	bra	u807
   475  0002D6  2E12               	decfsz	??_main& (0+255),f,c
   476  0002D8  D7FC               	bra	u807
   477                           
   478                           ;bypass_main.c: 163: if (PORTAbits.RA3 == 1) {
   479  0002DA  A680               	btfss	3968,3,c	;volatile
   480  0002DC  D002               	goto	l85
   481                           
   482                           ;bypass_main.c: 164: press_switch_ar[0] = 0;
   483  0002DE  0E00               	movlw	0
   484  0002E0  6E1E               	movwf	main@press_switch_ar,c
   485  0002E2                     l85:
   486                           
   487                           ;bypass_main.c: 165: }
   488                           ;bypass_main.c: 166: }
   489                           ;bypass_main.c: 169: if (PORTBbits.RB4 == 0) {
   490  0002E2  B881               	btfsc	3969,4,c	;volatile
   491  0002E4  D010               	goto	l88
   492                           
   493                           ;bypass_main.c: 170: _delay((unsigned long)((15)*(4000000/4000.0)));
   494  0002E6  0E14               	movlw	20
   495  0002E8  6E12               	movwf	??_main& (0+255),c
   496  0002EA  0E7A               	movlw	122
   497  0002EC                     u817:
   498  0002EC  2EE8               	decfsz	wreg,f,c
   499  0002EE  D7FE               	bra	u817
   500  0002F0  2E12               	decfsz	??_main& (0+255),f,c
   501  0002F2  D7FC               	bra	u817
   502                           
   503                           ;bypass_main.c: 171: if (PORTBbits.RB4 == 0) {
   504  0002F4  B881               	btfsc	3969,4,c	;volatile
   505  0002F6  D007               	goto	l88
   506                           
   507                           ;bypass_main.c: 172: press_switch_ar[1] = press_switch_ar[1] + 1;
   508  0002F8  281F               	incf	main@press_switch_ar+1,w,c
   509  0002FA  6E1F               	movwf	main@press_switch_ar+1,c
   510                           
   511                           ;bypass_main.c: 173: if (press_switch_ar[1] > 10) {
   512  0002FC  0E0A               	movlw	10
   513  0002FE  641F               	cpfsgt	main@press_switch_ar+1,c
   514  000300  D002               	goto	l88
   515                           
   516                           ;bypass_main.c: 174: press_switch_ar[1] = 10;
   517  000302  0E0A               	movlw	10
   518  000304  6E1F               	movwf	main@press_switch_ar+1,c
   519  000306                     l88:
   520                           
   521                           ;bypass_main.c: 175: }
   522                           ;bypass_main.c: 176: }
   523                           ;bypass_main.c: 177: }
   524                           ;bypass_main.c: 178: if (press_switch_ar[1] == 1) {
   525  000306  041F               	decf	main@press_switch_ar+1,w,c
   526  000308  A4D8               	btfss	status,2,c
   527  00030A  D00C               	goto	l89
   528                           
   529                           ;bypass_main.c: 179: changestate = 1;
   530  00030C  0E01               	movlw	1
   531  00030E  6E1A               	movwf	main@changestate,c
   532                           
   533                           ;bypass_main.c: 180: state = 2;
   534  000310  0E02               	movlw	2
   535  000312  6E1D               	movwf	main@state,c
   536                           
   537                           ;bypass_main.c: 181: if(pred_state == 2)
   538  000314  0E02               	movlw	2
   539  000316  1819               	xorwf	main@pred_state,w,c
   540  000318  A4D8               	btfss	status,2,c
   541  00031A  D002               	goto	l90
   542                           
   543                           ;bypass_main.c: 182: state = 0;
   544  00031C  0E00               	movlw	0
   545  00031E  6E1D               	movwf	main@state,c
   546  000320                     l90:
   547                           
   548                           ;bypass_main.c: 183: press_switch_ar[1] = 2;
   549  000320  0E02               	movlw	2
   550  000322  6E1F               	movwf	main@press_switch_ar+1,c
   551  000324                     l89:
   552                           
   553                           ;bypass_main.c: 184: }
   554                           ;bypass_main.c: 185: if (PORTBbits.RB4 == 1) {
   555  000324  A881               	btfss	3969,4,c	;volatile
   556  000326  D00B               	goto	l92
   557                           
   558                           ;bypass_main.c: 186: _delay((unsigned long)((15)*(4000000/4000.0)));
   559  000328  0E14               	movlw	20
   560  00032A  6E12               	movwf	??_main& (0+255),c
   561  00032C  0E7A               	movlw	122
   562  00032E                     u827:
   563  00032E  2EE8               	decfsz	wreg,f,c
   564  000330  D7FE               	bra	u827
   565  000332  2E12               	decfsz	??_main& (0+255),f,c
   566  000334  D7FC               	bra	u827
   567                           
   568                           ;bypass_main.c: 187: if (PORTBbits.RB4 == 1) {
   569  000336  A881               	btfss	3969,4,c	;volatile
   570  000338  D002               	goto	l92
   571                           
   572                           ;bypass_main.c: 188: press_switch_ar[1] = 0;
   573  00033A  0E00               	movlw	0
   574  00033C  6E1F               	movwf	main@press_switch_ar+1,c
   575  00033E                     l92:
   576                           
   577                           ;bypass_main.c: 189: }
   578                           ;bypass_main.c: 190: }
   579                           ;bypass_main.c: 193: if (PORTAbits.RA0 == 0) {
   580  00033E  B080               	btfsc	3968,0,c	;volatile
   581  000340  D010               	goto	l95
   582                           
   583                           ;bypass_main.c: 194: _delay((unsigned long)((15)*(4000000/4000.0)));
   584  000342  0E14               	movlw	20
   585  000344  6E12               	movwf	??_main& (0+255),c
   586  000346  0E7A               	movlw	122
   587  000348                     u837:
   588  000348  2EE8               	decfsz	wreg,f,c
   589  00034A  D7FE               	bra	u837
   590  00034C  2E12               	decfsz	??_main& (0+255),f,c
   591  00034E  D7FC               	bra	u837
   592                           
   593                           ;bypass_main.c: 195: if (PORTAbits.RA0 == 0) {
   594  000350  B080               	btfsc	3968,0,c	;volatile
   595  000352  D007               	goto	l95
   596                           
   597                           ;bypass_main.c: 196: press_switch_ar[2] = press_switch_ar[2] + 1;
   598  000354  2820               	incf	main@press_switch_ar+2,w,c
   599  000356  6E20               	movwf	main@press_switch_ar+2,c
   600                           
   601                           ;bypass_main.c: 197: if (press_switch_ar[2] > 10) {
   602  000358  0E0A               	movlw	10
   603  00035A  6420               	cpfsgt	main@press_switch_ar+2,c
   604  00035C  D002               	goto	l95
   605                           
   606                           ;bypass_main.c: 198: press_switch_ar[2] = 10;
   607  00035E  0E0A               	movlw	10
   608  000360  6E20               	movwf	main@press_switch_ar+2,c
   609  000362                     l95:
   610                           
   611                           ;bypass_main.c: 199: }
   612                           ;bypass_main.c: 200: }
   613                           ;bypass_main.c: 201: }
   614                           ;bypass_main.c: 202: if (press_switch_ar[2] == 2) {
   615  000362  0E02               	movlw	2
   616  000364  1820               	xorwf	main@press_switch_ar+2,w,c
   617  000366  A4D8               	btfss	status,2,c
   618  000368  D00B               	goto	l96
   619                           
   620                           ;bypass_main.c: 203: changestate = 1;
   621  00036A  0E01               	movlw	1
   622  00036C  6E1A               	movwf	main@changestate,c
   623                           
   624                           ;bypass_main.c: 204: e2_state = !e2_state;
   625  00036E  501C               	movf	main@e2_state,w,c
   626  000370  A4D8               	btfss	status,2,c
   627  000372  D002               	goto	u740
   628  000374  0E01               	movlw	1
   629  000376  D001               	goto	u750
   630  000378                     u740:
   631  000378  0E00               	movlw	0
   632  00037A                     u750:
   633  00037A  6E1C               	movwf	main@e2_state,c
   634                           
   635                           ;bypass_main.c: 205: press_switch_ar[2] = 3;
   636  00037C  0E03               	movlw	3
   637  00037E  6E20               	movwf	main@press_switch_ar+2,c
   638  000380                     l96:
   639                           
   640                           ;bypass_main.c: 206: }
   641                           ;bypass_main.c: 207: if (PORTAbits.RA0 == 1) {
   642  000380  A080               	btfss	3968,0,c	;volatile
   643  000382  D00B               	goto	l98
   644                           
   645                           ;bypass_main.c: 208: _delay((unsigned long)((15)*(4000000/4000.0)));
   646  000384  0E14               	movlw	20
   647  000386  6E12               	movwf	??_main& (0+255),c
   648  000388  0E7A               	movlw	122
   649  00038A                     u847:
   650  00038A  2EE8               	decfsz	wreg,f,c
   651  00038C  D7FE               	bra	u847
   652  00038E  2E12               	decfsz	??_main& (0+255),f,c
   653  000390  D7FC               	bra	u847
   654                           
   655                           ;bypass_main.c: 209: if (PORTAbits.RA0 == 1) {
   656  000392  A080               	btfss	3968,0,c	;volatile
   657  000394  D002               	goto	l98
   658                           
   659                           ;bypass_main.c: 210: press_switch_ar[2] = 0;
   660  000396  0E00               	movlw	0
   661  000398  6E20               	movwf	main@press_switch_ar+2,c
   662  00039A                     l98:
   663                           
   664                           ;bypass_main.c: 211: }
   665                           ;bypass_main.c: 212: }
   666                           ;bypass_main.c: 215: if (changestate == 1) {
   667  00039A  041A               	decf	main@changestate,w,c
   668  00039C  A4D8               	btfss	status,2,c
   669  00039E  D773               	goto	l79
   670                           
   671                           ;bypass_main.c: 216: all_on(state, 1, e1_state, e2_state);
   672  0003A0  C01D  F007         	movff	main@state,all_on@state
   673  0003A4  6A08               	clrf	all_on@state+1,c
   674  0003A6  0E01               	movlw	1
   675  0003A8  6E09               	movwf	all_on@gluh,c
   676  0003AA  C01B  F00A         	movff	main@e1_state,all_on@ef1
   677  0003AE  C01C  F00B         	movff	main@e2_state,all_on@ef2
   678  0003B2  EC5C  F002         	call	_all_on	;wreg free
   679                           
   680                           ;bypass_main.c: 217: pred_state = state;
   681  0003B6  C01D  F019         	movff	main@state,main@pred_state
   682                           
   683                           ;bypass_main.c: 218: _delay((unsigned long)((10)*(4000000/4000.0)));
   684  0003BA  0E0D               	movlw	13
   685  0003BC  6E12               	movwf	??_main& (0+255),c
   686  0003BE  0EFC               	movlw	252
   687  0003C0                     u857:
   688  0003C0  2EE8               	decfsz	wreg,f,c
   689  0003C2  D7FE               	bra	u857
   690  0003C4  2E12               	decfsz	??_main& (0+255),f,c
   691  0003C6  D7FC               	bra	u857
   692                           
   693                           ;bypass_main.c: 219: changestate = 0;
   694  0003C8  0E00               	movlw	0
   695  0003CA  6E1A               	movwf	main@changestate,c
   696  0003CC  D75C               	goto	l79
   697  0003CE                     __end_of_main:
   698                           	opt stack 0
   699                           tblptru	equ	0xFF8
   700                           tblptrh	equ	0xFF7
   701                           wreg	equ	0xFE8
   702                           status	equ	0xFD8
   703                           
   704 ;; *************** function _all_on *****************
   705 ;; Defined at:
   706 ;;		line 96 in file "bypass_main.c"
   707 ;; Parameters:    Size  Location     Type
   708 ;;  state           2    6[COMRAM] int 
   709 ;;  gluh            1    8[COMRAM] unsigned char 
   710 ;;  ef1             1    9[COMRAM] unsigned char 
   711 ;;  ef2             1   10[COMRAM] unsigned char 
   712 ;; Auto vars:     Size  Location     Type
   713 ;;		None
   714 ;; Return value:  Size  Location     Type
   715 ;;                  1    wreg      void 
   716 ;; Registers used:
   717 ;;		wreg, status,2, status,0, cstack
   718 ;; Tracked objects:
   719 ;;		On entry : 0/0
   720 ;;		On exit  : 0/0
   721 ;;		Unchanged: 0/0
   722 ;; Data sizes:     COMRAM   BANK0   BANK1
   723 ;;      Params:         5       0       0
   724 ;;      Locals:         0       0       0
   725 ;;      Temps:          1       0       0
   726 ;;      Totals:         6       0       0
   727 ;;Total ram usage:        6 bytes
   728 ;; Hardware stack levels used:    1
   729 ;; Hardware stack levels required when called:    1
   730 ;; This function calls:
   731 ;;		_now_change
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text1
   738  0004B8                     __ptext1:
   739                           	opt stack 0
   740  0004B8                     _all_on:
   741                           	opt stack 29
   742                           
   743                           ;bypass_main.c: 98: if(gluh == 1){
   744                           
   745                           ;incstack = 0
   746  0004B8  0409               	decf	all_on@gluh,w,c
   747  0004BA  A4D8               	btfss	status,2,c
   748  0004BC  D009               	goto	l70
   749                           
   750                           ;bypass_main.c: 99: LATC7 = 1;
   751  0004BE  8E8B               	bsf	3979,7,c	;volatile
   752                           
   753                           ;bypass_main.c: 100: _delay((unsigned long)((20)*(4000000/4000.0)));
   754  0004C0  0E1A               	movlw	26
   755  0004C2  6E0C               	movwf	??_all_on& (0+255),c
   756  0004C4  0EF8               	movlw	248
   757  0004C6                     u867:
   758  0004C6  2EE8               	decfsz	wreg,f,c
   759  0004C8  D7FE               	bra	u867
   760  0004CA  2E0C               	decfsz	??_all_on& (0+255),f,c
   761  0004CC  D7FC               	bra	u867
   762  0004CE  D000               	nop2	
   763  0004D0                     l70:
   764                           
   765                           ;bypass_main.c: 101: }
   766                           ;bypass_main.c: 103: now_change(state, ef1, ef2);
   767  0004D0  C007  F001         	movff	all_on@state,now_change@state
   768  0004D4  C008  F002         	movff	all_on@state+1,now_change@state+1
   769  0004D8  C00A  F003         	movff	all_on@ef1,now_change@ef1
   770  0004DC  C00B  F004         	movff	all_on@ef2,now_change@ef2
   771  0004E0  ECE7  F001         	call	_now_change	;wreg free
   772                           
   773                           ;bypass_main.c: 105: if(gluh == 1){
   774  0004E4  0409               	decf	all_on@gluh,w,c
   775  0004E6  A4D8               	btfss	status,2,c
   776  0004E8  0012               	return	
   777                           
   778                           ;bypass_main.c: 106: _delay((unsigned long)((20)*(4000000/4000.0)));
   779  0004EA  0E1A               	movlw	26
   780  0004EC  6E0C               	movwf	??_all_on& (0+255),c
   781  0004EE  0EF8               	movlw	248
   782  0004F0                     u877:
   783  0004F0  2EE8               	decfsz	wreg,f,c
   784  0004F2  D7FE               	bra	u877
   785  0004F4  2E0C               	decfsz	??_all_on& (0+255),f,c
   786  0004F6  D7FC               	bra	u877
   787  0004F8  D000               	nop2	
   788                           
   789                           ;bypass_main.c: 107: LATC7 = 0;
   790  0004FA  9E8B               	bcf	3979,7,c	;volatile
   791  0004FC  0012               	return	
   792  0004FE                     __end_of_all_on:
   793                           	opt stack 0
   794                           tblptru	equ	0xFF8
   795                           tblptrh	equ	0xFF7
   796                           wreg	equ	0xFE8
   797                           status	equ	0xFD8
   798                           
   799 ;; *************** function _now_change *****************
   800 ;; Defined at:
   801 ;;		line 37 in file "bypass_main.c"
   802 ;; Parameters:    Size  Location     Type
   803 ;;  state           2    0[COMRAM] int 
   804 ;;  ef1             1    2[COMRAM] unsigned char 
   805 ;;  ef2             1    3[COMRAM] unsigned char 
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;                  1    wreg      void 
   810 ;; Registers used:
   811 ;;		wreg, status,2, status,0
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMRAM   BANK0   BANK1
   817 ;;      Params:         4       0       0
   818 ;;      Locals:         0       0       0
   819 ;;      Temps:          2       0       0
   820 ;;      Totals:         6       0       0
   821 ;;Total ram usage:        6 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; This function calls:
   824 ;;		Nothing
   825 ;; This function is called by:
   826 ;;		_all_on
   827 ;; This function uses a non-reentrant model
   828 ;;
   829                           
   830                           	psect	text2
   831  0003CE                     __ptext2:
   832                           	opt stack 0
   833  0003CE                     _now_change:
   834                           	opt stack 29
   835                           
   836                           ;bypass_main.c: 38: LATC1 = !ef1;
   837                           
   838                           ;incstack = 0
   839  0003CE  5003               	movf	now_change@ef1,w,c
   840  0003D0  A4D8               	btfss	status,2,c
   841  0003D2  D002               	goto	u400
   842  0003D4  828B               	bsf	3979,1,c	;volatile
   843  0003D6  D001               	goto	u415
   844  0003D8                     u400:
   845  0003D8  928B               	bcf	3979,1,c	;volatile
   846  0003DA                     u415:
   847                           
   848                           ;bypass_main.c: 39: LATA5 = !ef2;
   849  0003DA  5004               	movf	now_change@ef2,w,c
   850  0003DC  A4D8               	btfss	status,2,c
   851  0003DE  D002               	goto	u420
   852  0003E0  8A89               	bsf	3977,5,c	;volatile
   853  0003E2  D001               	goto	u435
   854  0003E4                     u420:
   855  0003E4  9A89               	bcf	3977,5,c	;volatile
   856  0003E6                     u435:
   857                           
   858                           ;bypass_main.c: 40: LATC2 = ef1;
   859  0003E6  A003               	btfss	now_change@ef1,0,c
   860  0003E8  D002               	goto	u440
   861  0003EA  848B               	bsf	3979,2,c	;volatile
   862  0003EC  D001               	goto	u455
   863  0003EE                     u440:
   864  0003EE  948B               	bcf	3979,2,c	;volatile
   865  0003F0                     u455:
   866                           
   867                           ;bypass_main.c: 41: LATB5 = ef2;
   868  0003F0  A004               	btfss	now_change@ef2,0,c
   869  0003F2  D002               	goto	u460
   870  0003F4  8A8A               	bsf	3978,5,c	;volatile
   871  0003F6  D001               	goto	u475
   872  0003F8                     u460:
   873  0003F8  9A8A               	bcf	3978,5,c	;volatile
   874  0003FA                     u475:
   875                           
   876                           ;bypass_main.c: 42: if (state == 0) {
   877  0003FA  5001               	movf	now_change@state,w,c
   878  0003FC  1002               	iorwf	now_change@state+1,w,c
   879  0003FE  A4D8               	btfss	status,2,c
   880  000400  D008               	goto	l57
   881                           
   882                           ;bypass_main.c: 43: LATC6 = 0;
   883  000402  9C8B               	bcf	3979,6,c	;volatile
   884                           
   885                           ;bypass_main.c: 44: LATC3 = 1;
   886  000404  868B               	bsf	3979,3,c	;volatile
   887                           
   888                           ;bypass_main.c: 45: LATA2 = 1;
   889  000406  8489               	bsf	3977,2,c	;volatile
   890                           
   891                           ;bypass_main.c: 46: LATC4 = 1;
   892  000408  888B               	bsf	3979,4,c	;volatile
   893                           
   894                           ;bypass_main.c: 47: LATA1 = 1;
   895  00040A  8289               	bsf	3977,1,c	;volatile
   896                           
   897                           ;bypass_main.c: 48: LATC5 = 0;
   898  00040C  9A8B               	bcf	3979,5,c	;volatile
   899                           
   900                           ;bypass_main.c: 49: LATC0 = 1;
   901  00040E  808B               	bsf	3979,0,c	;volatile
   902                           
   903                           ;bypass_main.c: 50: } else if (state == 1) {
   904  000410  0012               	return	
   905  000412                     l57:
   906  000412  0401               	decf	now_change@state,w,c
   907  000414  1002               	iorwf	now_change@state+1,w,c
   908  000416  A4D8               	btfss	status,2,c
   909  000418  D008               	goto	l59
   910                           
   911                           ;bypass_main.c: 51: LATC6 = 0;
   912  00041A  9C8B               	bcf	3979,6,c	;volatile
   913                           
   914                           ;bypass_main.c: 52: LATC3 = 0;
   915  00041C  968B               	bcf	3979,3,c	;volatile
   916                           
   917                           ;bypass_main.c: 53: LATA2 = 0;
   918  00041E  9489               	bcf	3977,2,c	;volatile
   919                           
   920                           ;bypass_main.c: 54: LATC4 = 1;
   921  000420  888B               	bsf	3979,4,c	;volatile
   922                           
   923                           ;bypass_main.c: 55: LATA1 = 1;
   924  000422  8289               	bsf	3977,1,c	;volatile
   925                           
   926                           ;bypass_main.c: 56: LATC5 = 0;
   927  000424  9A8B               	bcf	3979,5,c	;volatile
   928                           
   929                           ;bypass_main.c: 57: LATC0 = 1;
   930  000426  808B               	bsf	3979,0,c	;volatile
   931                           
   932                           ;bypass_main.c: 58: } else if (state == 2) {
   933  000428  0012               	return	
   934  00042A                     l59:
   935  00042A  0E02               	movlw	2
   936  00042C  1801               	xorwf	now_change@state,w,c
   937  00042E  1002               	iorwf	now_change@state+1,w,c
   938  000430  A4D8               	btfss	status,2,c
   939  000432  D008               	goto	l61
   940                           
   941                           ;bypass_main.c: 59: LATC6 = 1;
   942  000434  8C8B               	bsf	3979,6,c	;volatile
   943                           
   944                           ;bypass_main.c: 60: LATC3 = 0;
   945  000436  968B               	bcf	3979,3,c	;volatile
   946                           
   947                           ;bypass_main.c: 61: LATA2 = 1;
   948  000438  8489               	bsf	3977,2,c	;volatile
   949                           
   950                           ;bypass_main.c: 62: LATC4 = 1;
   951  00043A  888B               	bsf	3979,4,c	;volatile
   952                           
   953                           ;bypass_main.c: 63: LATA1 = 0;
   954  00043C  9289               	bcf	3977,1,c	;volatile
   955                           
   956                           ;bypass_main.c: 64: LATC5 = 1;
   957  00043E  8A8B               	bsf	3979,5,c	;volatile
   958                           
   959                           ;bypass_main.c: 65: LATC0 = 0;
   960  000440  908B               	bcf	3979,0,c	;volatile
   961                           
   962                           ;bypass_main.c: 66: } else if (state == 3) {
   963  000442  0012               	return	
   964  000444                     l61:
   965  000444  0E03               	movlw	3
   966  000446  1801               	xorwf	now_change@state,w,c
   967  000448  1002               	iorwf	now_change@state+1,w,c
   968  00044A  A4D8               	btfss	status,2,c
   969  00044C  D007               	goto	l63
   970                           
   971                           ;bypass_main.c: 67: LATC3 = 1;
   972  00044E  868B               	bsf	3979,3,c	;volatile
   973                           
   974                           ;bypass_main.c: 68: LATA2 = 1;
   975  000450  8489               	bsf	3977,2,c	;volatile
   976                           
   977                           ;bypass_main.c: 69: LATC4 = 1;
   978  000452  888B               	bsf	3979,4,c	;volatile
   979                           
   980                           ;bypass_main.c: 70: LATA1 = 1;
   981  000454  8289               	bsf	3977,1,c	;volatile
   982                           
   983                           ;bypass_main.c: 71: LATC5 = 0;
   984  000456  9A8B               	bcf	3979,5,c	;volatile
   985                           
   986                           ;bypass_main.c: 72: LATC0 = 1;
   987  000458  808B               	bsf	3979,0,c	;volatile
   988                           
   989                           ;bypass_main.c: 73: }
   990  00045A  0012               	return	
   991  00045C                     l63:
   992                           
   993                           ;bypass_main.c: 74: else if (state == 10) {
   994  00045C  0E0A               	movlw	10
   995  00045E  1801               	xorwf	now_change@state,w,c
   996  000460  1002               	iorwf	now_change@state+1,w,c
   997  000462  A4D8               	btfss	status,2,c
   998  000464  D00C               	goto	l65
   999                           
  1000                           ;bypass_main.c: 75: LATC1 = 1;
  1001  000466  828B               	bsf	3979,1,c	;volatile
  1002                           
  1003                           ;bypass_main.c: 76: LATA5 = 1;
  1004  000468  8A89               	bsf	3977,5,c	;volatile
  1005                           
  1006                           ;bypass_main.c: 77: LATC6 = 1;
  1007  00046A  8C8B               	bsf	3979,6,c	;volatile
  1008                           
  1009                           ;bypass_main.c: 78: LATC3 = 0;
  1010  00046C  968B               	bcf	3979,3,c	;volatile
  1011                           
  1012                           ;bypass_main.c: 79: LATA2 = 0;
  1013  00046E  9489               	bcf	3977,2,c	;volatile
  1014                           
  1015                           ;bypass_main.c: 80: LATB5 = 0;
  1016  000470  9A8A               	bcf	3978,5,c	;volatile
  1017                           
  1018                           ;bypass_main.c: 81: LATC2 = 0;
  1019  000472  948B               	bcf	3979,2,c	;volatile
  1020                           
  1021                           ;bypass_main.c: 82: LATC4 = 0;
  1022  000474  988B               	bcf	3979,4,c	;volatile
  1023                           
  1024                           ;bypass_main.c: 83: LATA1 = 0;
  1025  000476  9289               	bcf	3977,1,c	;volatile
  1026                           
  1027                           ;bypass_main.c: 84: LATC5 = 0;
  1028  000478  9A8B               	bcf	3979,5,c	;volatile
  1029                           
  1030                           ;bypass_main.c: 85: LATC0 = 0;
  1031  00047A  908B               	bcf	3979,0,c	;volatile
  1032                           
  1033                           ;bypass_main.c: 86: }else {
  1034  00047C  0012               	return	
  1035  00047E                     l65:
  1036                           
  1037                           ;bypass_main.c: 87: LATA1 = 0;
  1038  00047E  9289               	bcf	3977,1,c	;volatile
  1039                           
  1040                           ;bypass_main.c: 88: LATC3 = 1;
  1041  000480  868B               	bsf	3979,3,c	;volatile
  1042                           
  1043                           ;bypass_main.c: 89: _delay((unsigned long)((200)*(4000000/4000.0)));
  1044  000482  0E02               	movlw	2
  1045  000484  6E06               	movwf	(??_now_change+1)& (0+255),c
  1046  000486  0E04               	movlw	4
  1047  000488  6E05               	movwf	??_now_change& (0+255),c
  1048  00048A  0EBA               	movlw	186
  1049  00048C                     u887:
  1050  00048C  2EE8               	decfsz	wreg,f,c
  1051  00048E  D7FE               	bra	u887
  1052  000490  2E05               	decfsz	??_now_change& (0+255),f,c
  1053  000492  D7FC               	bra	u887
  1054  000494  2E06               	decfsz	(??_now_change+1)& (0+255),f,c
  1055  000496  D7FA               	bra	u887
  1056  000498  D000               	nop2	
  1057                           
  1058                           ;bypass_main.c: 90: LATA1 = 1;
  1059  00049A  8289               	bsf	3977,1,c	;volatile
  1060                           
  1061                           ;bypass_main.c: 91: LATC3 = 1;
  1062  00049C  868B               	bsf	3979,3,c	;volatile
  1063                           
  1064                           ;bypass_main.c: 92: _delay((unsigned long)((200)*(4000000/4000.0)));
  1065  00049E  0E02               	movlw	2
  1066  0004A0  6E06               	movwf	(??_now_change+1)& (0+255),c
  1067  0004A2  0E04               	movlw	4
  1068  0004A4  6E05               	movwf	??_now_change& (0+255),c
  1069  0004A6  0EBA               	movlw	186
  1070  0004A8                     u897:
  1071  0004A8  2EE8               	decfsz	wreg,f,c
  1072  0004AA  D7FE               	bra	u897
  1073  0004AC  2E05               	decfsz	??_now_change& (0+255),f,c
  1074  0004AE  D7FC               	bra	u897
  1075  0004B0  2E06               	decfsz	(??_now_change+1)& (0+255),f,c
  1076  0004B2  D7FA               	bra	u897
  1077  0004B4  D000               	nop2	
  1078  0004B6  0012               	return	
  1079  0004B8                     __end_of_now_change:
  1080                           	opt stack 0
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           wreg	equ	0xFE8
  1084                           status	equ	0xFD8
  1085                           tblptru	equ	0xFF8
  1086                           tblptrh	equ	0xFF7
  1087                           wreg	equ	0xFE8
  1088                           status	equ	0xFD8
  1089                           
  1090                           	psect	rparam
  1091  0000                     tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           wreg	equ	0xFE8
  1094                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     32      35
    BANK0           128      0       0
    BANK1           244      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_all_on
    _all_on->_now_change

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    15      5    1741
                                             12 COMRAM    20    15      5
                             _all_on
 ---------------------------------------------------------------------------------
 (1) _all_on                                               6     1      5    1144
                                              6 COMRAM     6     1      5
                         _now_change
 ---------------------------------------------------------------------------------
 (2) _now_change                                           6     2      4     426
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _all_on
     _now_change

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F3      0       0       8        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK1            F4      0       0       5        0.0%
BANK1               F4      0       0       6        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80      0       0       4        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     20      23       1       27.6%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23       7        0.0%
DATA                 0      0      23       9        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Aug 15 01:54:59 2018

                     l61 0444                       l70 04D0                       l63 045C  
                     l65 047E                       l57 0412                       l90 0320  
                     l82 02AA                       l59 042A                       l83 02C8  
                     l92 033E                       l85 02E2                       l95 0362  
                     l79 0286                       l96 0380                       l88 0306  
                     l89 0324                       l98 039A          now_change@state 0001  
           __CFG_CP0$OFF 000000             __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000  
           __CFG_CP3$OFF 000000             main@e1_state 001B             main@e2_state 001C  
            __CFG_LVP$ON 000000              __CFG_WDT$ON 000000             __CFG_CPB$OFF 000000  
                    u400 03D8                      u420 03E4                      u415 03DA  
                    u440 03EE                      u600 02C2             __CFG_CPD$OFF 000000  
                    u435 03E6                      u460 03F8                      u455 03F0  
                    u475 03FA                      u740 0378                      u750 037A  
                    u590 02C0                      u807 02D2                      u817 02EC  
                    u827 032E                      u837 0348                      u847 038A  
                    u857 03C0                      u867 04C6                      u877 04F0  
                    u797 0290                      u887 048C                      u897 04A8  
           __CFG_BOR$OFF 000000             __CFG_BORV$20 000000                      wreg 000FE8  
           __CFG_FSCM$ON 000000             __CFG_IESO$ON 000000             __CFG_STVR$ON 000000  
                   _main 0206            __CFG_PBAD$ANA 000000                     start 0002  
           ___param_bank 000000           __CFG_CCP2MX$ON 000000                    ?_main 000D  
                  _CMCON 000FB4                    _T1CON 000FCD                    _LATA1 007C49  
                  _LATA2 007C4A                    _LATC0 007C58                    _LATC1 007C59  
                  _LATA5 007C4D                    _LATC2 007C5A                    _LATB5 007C55  
                  _LATC3 007C5B                    _LATC4 007C5C                    _LATC5 007C5D  
                  _LATC6 007C5E                    _LATC7 007C5F                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94            __CFG_PWRT$OFF 000000  
          __CFG_WRT0$OFF 000000            __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000  
          __CFG_WRT3$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  status 000FD8           __CFG_MCLRE$OFF 000000          __initialization 04FE  
           __end_of_main 03CE                   ??_main 0012            __activetblptr 000001  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _all_on 04B8  
           __mediumconst 0000                   tblptrh 000FF7                   tblptru 000FF8  
             __accesstop 0080  __end_of__initialization 0504            ___rparam_used 000001  
         __pcstackCOMRAM 0001          __CFG_OSC$INTIO1 000000                  ?_all_on 0007  
                __Hparam 0000                  __Lparam 0000          __size_of_all_on 0046  
           __psmallconst 0200                  __pcinit 04FE                  __ramtop 0200  
                __ptext0 0206                  __ptext1 04B8                  __ptext2 03CE  
      __end_of_gluh_wait 0205           main@pred_state 0019               all_on@gluh 0009  
   end_of_initialization 0504               _now_change 03CE                _PORTAbits 000F80  
              _PORTBbits 000F81               main@SERIES 0015           __end_of_all_on 04FE  
    start_initialization 04FE          main@changestate 001A              ?_now_change 0001  
    main@press_switch_ar 001E                 ??_all_on 000C              __pbssCOMRAM 0021  
            __smallconst 0200                _gluh_wait 0201      __size_of_now_change 00EA  
              all_on@ef1 000A                all_on@ef2 000B         __CFG_WDTPS$32768 000000  
              main@F2606 0021            now_change@ef1 0003            now_change@ef2 0004  
              main@state 001D                 __Hrparam 0000                 __Lrparam 0000  
           __Lsmallconst 0200         main@press_switch 0014      main@pred_pred_state 0013  
          __size_of_main 01C8             ??_now_change 0005              all_on@state 0007  
               main@LOOP 0016                 main@argc 000D                 main@argv 000F  
     __end_of_now_change 04B8               _OSCCONbits 000FD3      main@change_e1_state 0017  
    main@change_e2_state 0018  
